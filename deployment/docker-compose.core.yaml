version: "3.5"
services:
  # ====================================================================
  # PROVIDER ===========================================================
  # Core provider with start and setup services, along with its database
  ds_core_provider:
    container_name: ds_core_provider
    image: caparicioesd/rainbow:0.3.3
    restart: on-failure
    depends_on:
      - ds_core_provider_db
    ports:
      - "1200:1200"
    volumes:
      - ./../.env.provider.core:/app/.env.provider.core
      - ./../certificates:/app/certificates
    entrypoint: ["/usr/local/bin/rainbow_core"]
    command: ["provider", "start", "--env-file", "/app/.env.provider.core"]
    extra_hosts:
      - "host.docker.internal:host-gateway"

  ds_core_provider_setup:
    container_name: ds_core_provider_setup
    image: caparicioesd/rainbow:0.3.3
    depends_on:
      - ds_core_provider_db
    volumes:
      - ./../.env.provider.core:/app/.env.provider.core
    entrypoint: ["/usr/local/bin/rainbow_core"]
    command: ["provider", "setup", "--env-file", "/app/.env.provider.core"]

  ds_core_provider_db:
    container_name: "ds_core_provider_db"
    image: "postgres"
    restart: always
    environment:
      POSTGRES_PASSWORD: ds_provider
      POSTGRES_USER: ds_provider
      POSTGRES_DB: ds_provider
    ports:
      - "1400:5432"

  # ====================================================================
  # CONSUMER ===========================================================
  # Core consumer with start and setup services, along with its database
  ds_core_consumer:
    container_name: ds_core_consumer
    image: caparicioesd/rainbow:0.3.3
    restart: on-failure
    depends_on:
      - ds_core_consumer_db
    ports:
      - "1100:1100"
    volumes:
      - ./../.env.consumer.core:/app/.env.consumer.core
      - ./../certificates:/app/certificates
    entrypoint: ["/usr/local/bin/rainbow_core"]
    command: ["consumer", "start", "--env-file", "/app/.env.consumer.core"]
    extra_hosts:
      - "host.docker.internal:host-gateway"

  ds_core_consumer_setup:
    container_name: ds_core_consumer_setup
    image: caparicioesd/rainbow:0.3.3
    depends_on:
      - ds_core_provider_db
    volumes:
      - ./../.env.consumer.core:/app/.env.consumer.core
    entrypoint: ["/usr/local/bin/rainbow_core"]
    command: ["consumer", "setup", "--env-file", "/app/.env.consumer.core"]

  ds_core_consumer_db:
    container_name: ds_core_consumer_db
    image: "postgres"
    restart: always
    environment:
      POSTGRES_PASSWORD: ds_consumer
      POSTGRES_USER: ds_consumer
      POSTGRES_DB: ds_consumer
    ports:
      - "1300:5432"

  # ====================================================================
  # AUTHORITY ==========================================================
  # Authority with start and setup services, along with its database
  ds_authority:
    container_name: ds_authority
    image: caparicioesd/rainbow_authority:0.3.3
    restart: on-failure
    depends_on:
      - ds_authority_db
    ports:
      - "1500:1500"
    volumes:
      - ./../.env.authority:/app/.env.authority
      - ./../certificates:/app/certificates
    entrypoint: ["/usr/local/bin/rainbow_authority"]
    command: ["start", "--env-file", "/app/.env.authority"]
    extra_hosts:
      - "host.docker.internal:host-gateway"

  ds_authority_setup:
    container_name: ds_authority_setup
    image: caparicioesd/rainbow_authority:0.3.3
    depends_on:
      - ds_authority_db
    ports:
      - "1500:1500"
    volumes:
      - ./../.env.authority:/app/.env.authority
    entrypoint: ["/usr/local/bin/rainbow_authority"]
    command: ["setup", "--env-file", "/app/.env.authority"]

  ds_authority_db:
    container_name: ds_authority_db
    image: "postgres"
    restart: always
    environment:
      POSTGRES_PASSWORD: ds_authority
      POSTGRES_USER: ds_authority
      POSTGRES_DB: ds_authority
    ports:
      - "1450:5432"
